{"version":3,"sources":["../../src/client/index.js"],"names":["ipfs","bitswap","opts","block","bootstrap","config","dag","dht","dns","callbackify","variadic","files","id","key","name","object","pin","pubsub","repo","resolve","stats","stop","swarm","version","Object","assign","add","get","cat","stat"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,gBAAQ;AACrB,MAAMA,OAAO;AACXC,aAAS,uBAAcC,IAAd,CADE;AAEXC,WAAO,qBAAYD,IAAZ,CAFI;AAGXE,eAAW,yBAAgBF,IAAhB,CAHA;AAIXG,YAAQ,sBAAaH,IAAb,CAJG;AAKXI,SAAK,mBAAUJ,IAAV,CALM;AAMXK,SAAK,mBAAUL,IAAV,CANM;AAOXM,SAAKC,sBAAYC,QAAZ,CAAqB,wBAAO,UAAP,EAAmBR,IAAnB,CAArB,CAPM;AAQXS,WAAO,qBAAYT,IAAZ,CARI;AASXU,QAAI,2BAAY,wBAAO,SAAP,EAAkBV,IAAlB,CAAZ,CATO;AAUXW,SAAK,mBAAUX,IAAV,CAVM;AAWXY,UAAM,oBAAWZ,IAAX,CAXK;AAYXa,YAAQ,sBAAab,IAAb,CAZG;AAaXc,SAAK,mBAAUd,IAAV,CAbM;AAcXe,YAAQ,sBAAaf,IAAb,CAdG;AAeXgB,UAAM,oBAAWhB,IAAX,CAfK;AAgBXiB,aAASV,sBAAYC,QAAZ,CAAqB,wBAAO,cAAP,EAAuBR,IAAvB,CAArB,CAhBE;AAiBXkB,WAAO,qBAAYlB,IAAZ,CAjBI;AAkBXmB,UAAM,2BAAY,wBAAO,WAAP,EAAoBnB,IAApB,CAAZ,CAlBK;AAmBXoB,WAAO,qBAAYpB,IAAZ,CAnBI;AAoBXqB,aAAS,2BAAY,wBAAO,cAAP,EAAuBrB,IAAvB,CAAZ;AApBE,GAAb;;AAuBAsB,SAAOC,MAAP,CAAczB,IAAd,EAAoB,kBAASE,IAAT,CAApB,EAAoC,oBAAWA,IAAX,CAApC;;AAEA;AACAF,OAAK0B,GAAL,GAAW1B,KAAKW,KAAL,CAAWe,GAAtB;AACA1B,OAAK2B,GAAL,GAAW3B,KAAKW,KAAL,CAAWgB,GAAtB;AACA3B,OAAK4B,GAAL,GAAW5B,KAAKW,KAAL,CAAWiB,GAAtB;AACA5B,OAAKoB,KAAL,CAAWnB,OAAX,GAAqBD,KAAKC,OAAL,CAAa4B,IAAlC;AACA7B,OAAKoB,KAAL,CAAWF,IAAX,GAAkBlB,KAAKkB,IAAL,CAAUW,IAA5B;;AAEA,SAAO7B,IAAP;AACD,C","file":"index.js","sourcesContent":["import { caller } from \"postmsg-rpc\";\r\nimport callbackify from \"callbackify\";\r\nimport createBitswap from \"./bitswap\";\r\nimport createBlock from \"./block\";\r\nimport createBootstrap from \"./bootstrap\";\r\nimport createConfig from \"./config\";\r\nimport createDag from \"./dag\";\r\nimport createDht from \"./dht\";\r\nimport createFiles from \"./files\";\r\nimport createKey from \"./key\";\r\nimport createLs from \"./ls\";\r\nimport createName from \"./name\";\r\nimport createObject from \"./object\";\r\nimport createPin from \"./pin\";\r\nimport createPing from \"./ping\";\r\nimport createPubsub from \"./pubsub\";\r\nimport createRepo from \"./repo\";\r\nimport createStats from \"./stats\";\r\nimport createSwarm from \"./swarm\";\r\n\r\nexport default opts => {\r\n  const ipfs = {\r\n    bitswap: createBitswap(opts),\r\n    block: createBlock(opts),\r\n    bootstrap: createBootstrap(opts),\r\n    config: createConfig(opts),\r\n    dag: createDag(opts),\r\n    dht: createDht(opts),\r\n    dns: callbackify.variadic(caller(\"ipfs.dns\", opts)),\r\n    files: createFiles(opts),\r\n    id: callbackify(caller(\"ipfs.id\", opts)),\r\n    key: createKey(opts),\r\n    name: createName(opts),\r\n    object: createObject(opts),\r\n    pin: createPin(opts),\r\n    pubsub: createPubsub(opts),\r\n    repo: createRepo(opts),\r\n    resolve: callbackify.variadic(caller(\"ipfs.resolve\", opts)),\r\n    stats: createStats(opts),\r\n    stop: callbackify(caller(\"ipfs.stop\", opts)),\r\n    swarm: createSwarm(opts),\r\n    version: callbackify(caller(\"ipfs.version\", opts))\r\n  };\r\n\r\n  Object.assign(ipfs, createLs(opts), createPing(opts));\r\n\r\n  // Aliases\r\n  ipfs.add = ipfs.files.add;\r\n  ipfs.get = ipfs.files.get;\r\n  ipfs.cat = ipfs.files.cat;\r\n  ipfs.stats.bitswap = ipfs.bitswap.stat;\r\n  ipfs.stats.repo = ipfs.repo.stat;\r\n\r\n  return ipfs;\r\n};\r\n"]}