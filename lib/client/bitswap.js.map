{"version":3,"sources":["../../src/client/bitswap.js"],"names":["opts","ledger","callbackify","variadic","reprovide","stat","stats","blocksReceived","dataReceived","blocksSent","dataSent","dupBlksReceived","dupDataReceived","unwant","wantlist"],"mappings":";;;;;;kBAKe,UAAUA,IAAV,EAAgB;AAC7B,SAAO;AACLC,YAAQC,sBAAYC,QAAZ,CAAqB,wBAAO,qBAAP,EAA8BH,IAA9B,CAArB,CADH;AAELI,eAAWF,sBAAYC,QAAZ,CAAqB,wBAAO,wBAAP,EAAiCH,IAAjC,CAArB,CAFN;AAGLK,UAAM,2BACJ,mBACE,wBAAO,mBAAP,EAA4BL,IAA5B,CADF,EAEE,UAACM,KAAD,EAAW;AACT,UAAIA,KAAJ,EAAW;AACT,YAAI,oBAAUA,MAAMC,cAAhB,CAAJ,EAAqC;AACnCD,gBAAMC,cAAN,GAAuB,sBAAYD,MAAMC,cAAlB,CAAvB;AACD;;AAED,YAAI,oBAAUD,MAAME,YAAhB,CAAJ,EAAmC;AACjCF,gBAAME,YAAN,GAAqB,sBAAYF,MAAME,YAAlB,CAArB;AACD;;AAED,YAAI,oBAAUF,MAAMG,UAAhB,CAAJ,EAAiC;AAC/BH,gBAAMG,UAAN,GAAmB,sBAAYH,MAAMG,UAAlB,CAAnB;AACD;;AAED,YAAI,oBAAUH,MAAMI,QAAhB,CAAJ,EAA+B;AAC7BJ,gBAAMI,QAAN,GAAiB,sBAAYJ,MAAMI,QAAlB,CAAjB;AACD;;AAED,YAAI,oBAAUJ,MAAMK,eAAhB,CAAJ,EAAsC;AACpCL,gBAAMK,eAAN,GAAwB,sBAAYL,MAAMK,eAAlB,CAAxB;AACD;;AAED,YAAI,oBAAUL,MAAMM,eAAhB,CAAJ,EAAsC;AACpCN,gBAAMM,eAAN,GAAwB,sBAAYN,MAAMM,eAAlB,CAAxB;AACD;AACF;;AAED,aAAON,KAAP;AACD,KA9BH,CADI,CAHD;AAqCLO,YAAQX,sBAAYC,QAAZ,CAAqB,wBAAO,qBAAP,EAA8BH,IAA9B,CAArB,CArCH;AAsCLc,cAAUZ,sBAAYC,QAAZ,CAAqB,wBAAO,uBAAP,EAAgCH,IAAhC,CAArB;AAtCL,GAAP;AAwCD,C;;AA9CD;;AACA;;;;AACA;;AACA","file":"bitswap.js","sourcesContent":["import { caller } from 'postmsg-rpc'\r\nimport callbackify from 'callbackify'\r\nimport { post } from 'prepost'\r\nimport { isBigJson, bigFromJson } from '../serialization/big'\r\n\r\nexport default function (opts) {\r\n  return {\r\n    ledger: callbackify.variadic(caller('ipfs.bitswap.ledger', opts)),\r\n    reprovide: callbackify.variadic(caller('ipfs.bitswap.reprovide', opts)),\r\n    stat: callbackify(\r\n      post(\r\n        caller('ipfs.bitswap.stat', opts),\r\n        (stats) => {\r\n          if (stats) {\r\n            if (isBigJson(stats.blocksReceived)) {\r\n              stats.blocksReceived = bigFromJson(stats.blocksReceived)\r\n            }\r\n\r\n            if (isBigJson(stats.dataReceived)) {\r\n              stats.dataReceived = bigFromJson(stats.dataReceived)\r\n            }\r\n\r\n            if (isBigJson(stats.blocksSent)) {\r\n              stats.blocksSent = bigFromJson(stats.blocksSent)\r\n            }\r\n\r\n            if (isBigJson(stats.dataSent)) {\r\n              stats.dataSent = bigFromJson(stats.dataSent)\r\n            }\r\n\r\n            if (isBigJson(stats.dupBlksReceived)) {\r\n              stats.dupBlksReceived = bigFromJson(stats.dupBlksReceived)\r\n            }\r\n\r\n            if (isBigJson(stats.dupDataReceived)) {\r\n              stats.dupDataReceived = bigFromJson(stats.dupDataReceived)\r\n            }\r\n          }\r\n\r\n          return stats\r\n        }\r\n      )\r\n    ),\r\n    unwant: callbackify.variadic(caller('ipfs.bitswap.unwant', opts)),\r\n    wantlist: callbackify.variadic(caller('ipfs.bitswap.wantlist', opts))\r\n  }\r\n}\r\n"]}