{"version":3,"sources":["../../src/serialization/block.js"],"names":["blockToJson","block","__ipfsPostMsgProxyType","cid","data","blockFromJson","obj","Block","isBlock","isBlockJson","preBlockFromJson","index","args","preBlockToJson"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;AAEO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAY;AACrCC,4BAAwB,OADa;AAErCC,SAAK,oBAAUF,MAAME,GAAhB,CAFgC;AAGrCC,UAAM,0BAAaH,MAAMG,IAAnB;AAH+B,GAAZ;AAAA,CAApB;;AAMA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AACpC,MAAMH,MAAM,sBAAYG,IAAIH,GAAhB,CAAZ;AACA,MAAMC,OAAO,4BAAeE,IAAIF,IAAnB,CAAb;AACA,SAAO,IAAIG,mBAAJ,CAAUH,IAAV,EAAgBD,GAAhB,CAAP;AACD,CAJM;;AAMA,IAAMK,4BAAU,SAAVA,OAAU,CAACF,GAAD;AAAA,SAASA,OAAOC,oBAAMC,OAAN,CAAcF,GAAd,CAAhB;AAAA,CAAhB;AACA,IAAMG,oCAAc,SAAdA,WAAc,CAACH,GAAD;AAAA,SAASA,OAAOA,IAAIJ,sBAAJ,KAA+B,OAA/C;AAAA,CAApB;;AAEA,IAAMQ,8CAAmB,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AACzC,SAAO,YAAa;AAAA,sCAATC,IAAS;AAATA,UAAS;AAAA;;AAClB,QAAIH,YAAYG,KAAKD,KAAL,CAAZ,CAAJ,EAA8B;AAC5BC,WAAKD,KAAL,IAAcN,cAAcO,KAAKD,KAAL,CAAd,CAAd;AACD;AACD,WAAOC,IAAP;AACD,GALD;AAMD,CAPM;;AASA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACF,KAAD,EAAW;AACvC,SAAO,YAAa;AAAA,uCAATC,IAAS;AAATA,UAAS;AAAA;;AAClB,QAAIJ,QAAQI,KAAKD,KAAL,CAAR,CAAJ,EAA0B;AACxBC,WAAKD,KAAL,IAAcX,YAAYY,KAAKD,KAAL,CAAZ,CAAd;AACD;AACD,WAAOC,IAAP;AACD,GALD;AAMD,CAPM","file":"block.js","sourcesContent":["import Block from 'ipfs-block'\r\nimport { cidFromJson, cidToJson } from './cid'\r\nimport { bufferFromJson, bufferToJson } from './buffer'\r\n\r\nexport const blockToJson = (block) => ({\r\n  __ipfsPostMsgProxyType: 'Block',\r\n  cid: cidToJson(block.cid),\r\n  data: bufferToJson(block.data)\r\n})\r\n\r\nexport const blockFromJson = (obj) => {\r\n  const cid = cidFromJson(obj.cid)\r\n  const data = bufferFromJson(obj.data)\r\n  return new Block(data, cid)\r\n}\r\n\r\nexport const isBlock = (obj) => obj && Block.isBlock(obj)\r\nexport const isBlockJson = (obj) => obj && obj.__ipfsPostMsgProxyType === 'Block'\r\n\r\nexport const preBlockFromJson = (index) => {\r\n  return (...args) => {\r\n    if (isBlockJson(args[index])) {\r\n      args[index] = blockFromJson(args[index])\r\n    }\r\n    return args\r\n  }\r\n}\r\n\r\nexport const preBlockToJson = (index) => {\r\n  return (...args) => {\r\n    if (isBlock(args[index])) {\r\n      args[index] = blockToJson(args[index])\r\n    }\r\n    return args\r\n  }\r\n}\r\n"]}