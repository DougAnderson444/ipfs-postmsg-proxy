{"version":3,"sources":["../../src/server/key.js"],"names":["getIpfs","opts","export","pre","key","gen","import","list","rename","rm"],"mappings":";;;;;;kBAGe,UAAUA,OAAV,EAAmBC,IAAnB,EAAyB;AACtC,SAAO;AACLC,YAAQ,wBAAO,iBAAP,EAA0B,kBAChCD,KAAKE,GAAL,CAAS,YAAT,CADgC,EAEhC;AAAA;;AAAA,aAAa,0BAAUC,GAAV,EAAcF,MAAd,+BAAb;AAAA,KAFgC,CAA1B,EAGLD,IAHK,CADH;AAKLI,SAAK,wBAAO,cAAP,EAAuB,kBAC1BJ,KAAKE,GAAL,CAAS,SAAT,CAD0B,EAE1B;AAAA;;AAAA,aAAa,2BAAUC,GAAV,EAAcC,GAAd,gCAAb;AAAA,KAF0B,CAAvB,EAGFJ,IAHE,CALA;AASLK,YAAQ,wBAAO,iBAAP,EAA0B,kBAChCL,KAAKE,GAAL,CAAS,YAAT,CADgC,EAEhC;AAAA;;AAAA,aAAa,2BAAUC,GAAV,EAAcE,MAAd,gCAAb;AAAA,KAFgC,CAA1B,EAGLL,IAHK,CATH;AAaLM,UAAM,wBAAO,eAAP,EAAwB,kBAC5BN,KAAKE,GAAL,CAAS,UAAT,CAD4B,EAE5B;AAAA,aAAMH,UAAUI,GAAV,CAAcG,IAAd,EAAN;AAAA,KAF4B,CAAxB,EAGHN,IAHG,CAbD;AAiBLO,YAAQ,wBAAO,iBAAP,EAA0B,kBAChCP,KAAKE,GAAL,CAAS,YAAT,CADgC,EAEhC;AAAA;;AAAA,aAAa,2BAAUC,GAAV,EAAcI,MAAd,gCAAb;AAAA,KAFgC,CAA1B,EAGLP,IAHK,CAjBH;AAqBLQ,QAAI,wBAAO,aAAP,EAAsB,kBACxBR,KAAKE,GAAL,CAAS,QAAT,CADwB,EAExB;AAAA;;AAAA,aAAa,2BAAUC,GAAV,EAAcK,EAAd,gCAAb;AAAA,KAFwB,CAAtB,EAGDR,IAHC;AArBC,GAAP;AA0BD,C;;AA9BD;;AACA","file":"key.js","sourcesContent":["import { expose } from 'postmsg-rpc'\r\nimport { pre } from 'prepost'\r\n\r\nexport default function (getIpfs, opts) {\r\n  return {\r\n    export: expose('ipfs.key.export', pre(\r\n      opts.pre('key.export'),\r\n      (...args) => getIpfs().key.export(...args)\r\n    ), opts),\r\n    gen: expose('ipfs.key.gen', pre(\r\n      opts.pre('key.gen'),\r\n      (...args) => getIpfs().key.gen(...args)\r\n    ), opts),\r\n    import: expose('ipfs.key.import', pre(\r\n      opts.pre('key.import'),\r\n      (...args) => getIpfs().key.import(...args)\r\n    ), opts),\r\n    list: expose('ipfs.key.list', pre(\r\n      opts.pre('key.list'),\r\n      () => getIpfs().key.list()\r\n    ), opts),\r\n    rename: expose('ipfs.key.rename', pre(\r\n      opts.pre('key.rename'),\r\n      (...args) => getIpfs().key.rename(...args)\r\n    ), opts),\r\n    rm: expose('ipfs.key.rm', pre(\r\n      opts.pre('key.rm'),\r\n      (...args) => getIpfs().key.rm(...args)\r\n    ), opts)\r\n  }\r\n}\r\n"]}