{"version":3,"sources":["../../src/server/object.js"],"names":["getIpfs","opts","new","pre","object","dagNodeToJson","put","args","Data","get","data","bufferToJson","links","res","map","dagLinkToJson","stat","patch","addLink","rmLink","appendData","setData"],"mappings":"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","file":"object.js","sourcesContent":["import { expose } from 'postmsg-rpc'\r\nimport { pre, post } from 'prepost'\r\nimport { dagNodeToJson, preDagNodeFromJson, dagLinkToJson, preDagLinkFromJson } from '../serialization/dag'\r\nimport { preCidFromJson } from '../serialization/cid'\r\nimport { isBufferJson, bufferFromJson, preBufferFromJson, bufferToJson } from '../serialization/buffer'\r\n\r\nexport default function (getIpfs, opts) {\r\n  return {\r\n    new: expose('ipfs.object.new', pre(\r\n      opts.pre('object.new'),\r\n      post(\r\n        (...args) => getIpfs().object.new(...args),\r\n        dagNodeToJson\r\n      )\r\n    ), opts),\r\n    put: expose('ipfs.object.put', pre(\r\n      preDagNodeFromJson(0),\r\n      preBufferFromJson(0),\r\n      (...args) => {\r\n        if (args[0] && isBufferJson(args[0].Data)) {\r\n          args[0].Data = bufferFromJson(args[0].Data)\r\n        }\r\n\r\n        return args\r\n      },\r\n      opts.pre('object.put'),\r\n      post(\r\n        (...args) => getIpfs().object.put(...args),\r\n        dagNodeToJson\r\n      )\r\n    ), opts),\r\n    get: expose('ipfs.object.get', pre(\r\n      preBufferFromJson(0),\r\n      preCidFromJson(0),\r\n      opts.pre('object.get'),\r\n      post(\r\n        (...args) => getIpfs().object.get(...args),\r\n        dagNodeToJson\r\n      )\r\n    ), opts),\r\n    data: expose('ipfs.object.data', pre(\r\n      preBufferFromJson(0),\r\n      preCidFromJson(0),\r\n      opts.pre('object.data'),\r\n      post(\r\n        (...args) => getIpfs().object.data(...args),\r\n        bufferToJson\r\n      )\r\n    ), opts),\r\n    links: expose('ipfs.object.links', pre(\r\n      preBufferFromJson(0),\r\n      preCidFromJson(0),\r\n      opts.pre('object.links'),\r\n      post(\r\n        (...args) => getIpfs().object.links(...args),\r\n        (res) => res.map(dagLinkToJson)\r\n      )\r\n    ), opts),\r\n    stat: expose('ipfs.object.stat', pre(\r\n      preBufferFromJson(0),\r\n      preCidFromJson(0),\r\n      opts.pre('object.stat'),\r\n      (...args) => getIpfs().object.stat(...args)\r\n    ), opts),\r\n    patch: {\r\n      addLink: expose('ipfs.object.patch.addLink', pre(\r\n        preBufferFromJson(0),\r\n        preCidFromJson(0),\r\n        preDagLinkFromJson(1),\r\n        opts.pre('object.patch.addLink'),\r\n        post(\r\n          (...args) => getIpfs().object.patch.addLink(...args),\r\n          dagNodeToJson\r\n        )\r\n      ), opts),\r\n      rmLink: expose('ipfs.object.patch.rmLink', pre(\r\n        preBufferFromJson(0),\r\n        preCidFromJson(0),\r\n        preDagLinkFromJson(1),\r\n        opts.pre('object.patch.rmLink'),\r\n        post(\r\n          (...args) => getIpfs().object.patch.rmLink(...args),\r\n          dagNodeToJson\r\n        )\r\n      ), opts),\r\n      appendData: expose('ipfs.object.patch.appendData', pre(\r\n        preBufferFromJson(0),\r\n        preCidFromJson(0),\r\n        preBufferFromJson(1),\r\n        opts.pre('object.patch.appendData'),\r\n        post(\r\n          (...args) => getIpfs().object.patch.appendData(...args),\r\n          dagNodeToJson\r\n        )\r\n      ), opts),\r\n      setData: expose('ipfs.object.patch.setData', pre(\r\n        preBufferFromJson(0),\r\n        preCidFromJson(0),\r\n        preBufferFromJson(1),\r\n        opts.pre('object.patch.setData'),\r\n        post(\r\n          (...args) => getIpfs().object.patch.setData(...args),\r\n          dagNodeToJson\r\n        )\r\n      ), opts)\r\n    }\r\n  }\r\n}\r\n"]}