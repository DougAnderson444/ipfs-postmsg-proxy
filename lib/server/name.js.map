{"version":3,"sources":["../../src/server/name.js"],"names":["getIpfs","opts","publish","pre","name","resolve","last","require"],"mappings":";;;;;;kBAIe,UAAUA,OAAV,EAAmBC,IAAnB,EAAyB;AACtC,SAAO;AACLC,aAAS,wBAAO,mBAAP,EAA4B,kBACnCD,KAAKE,GAAL,CAAS,cAAT,CADmC,EAEnC;AAAA;;AAAA,aAAa,2BAAUC,IAAV,EAAeF,OAAf,gCAAb;AAAA,KAFmC,CAA5B,EAGND,IAHM,CADJ;AAKLI,aAAS,wBAAO,mBAAP,EAA4B,kBACnCJ,KAAKE,GAAL,CAAS,cAAT,CADmC,EAEnC;AAAA;;AAAA,aAAaG,KAAK,4BAAUF,IAAV,EAAeC,OAAf,iCAAL,CAAb;AAAA,KAFmC,CAA5B,EAGNJ,IAHM;AALJ,GAAP;AAUD,C;;AAfD;;AACA;;AACA,IAAMK,OAAOC,QAAQ,SAAR,CAAb","file":"name.js","sourcesContent":["import { expose } from 'postmsg-rpc'\r\nimport { pre } from 'prepost'\r\nconst last = require(\"it-last\");\r\n\r\nexport default function (getIpfs, opts) {\r\n  return {\r\n    publish: expose('ipfs.name.publish', pre(\r\n      opts.pre('name.publish'),\r\n      (...args) => getIpfs().name.publish(...args)\r\n    ), opts),\r\n    resolve: expose('ipfs.name.resolve', pre(\r\n      opts.pre('name.resolve'),\r\n      (...args) => last(getIpfs().name.resolve(...args))\r\n    ), opts)\r\n  }\r\n}\r\n"]}