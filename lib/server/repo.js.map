{"version":3,"sources":["../../src/server/repo.js"],"names":["getIpfs","opts","gc","pre","repo","stat","stats","numObjects","repoSize","storageMax","version"],"mappings":";;;;;;kBAIe,UAAUA,OAAV,EAAmBC,IAAnB,EAAyB;AACtC,SAAO;AACLC,QAAI,wBAAO,cAAP,EAAuB,kBACzBD,KAAKE,GAAL,CAAS,SAAT,CADyB,EAEzB;AAAA;;AAAA,aAAa,2BAAUC,IAAV,EAAeF,EAAf,gCAAb;AAAA,KAFyB,CAAvB,EAGDD,IAHC,CADC;AAKLI,UAAM,wBAAO,gBAAP,EAAyB,kBAC7BJ,KAAKE,GAAL,CAAS,WAAT,CAD6B,EAE7B,mBACE;AAAA;;AAAA,aAAa,4BAAUC,IAAV,EAAeC,IAAf,iCAAb;AAAA,KADF,EAEE,UAACC,KAAD,EAAW;AACT,UAAIA,KAAJ,EAAW;AACT,YAAI,gBAAMA,MAAMC,UAAZ,CAAJ,EAA6B;AAC3BD,gBAAMC,UAAN,GAAmB,oBAAUD,MAAMC,UAAhB,CAAnB;AACD;;AAED,YAAI,gBAAMD,MAAME,QAAZ,CAAJ,EAA2B;AACzBF,gBAAME,QAAN,GAAiB,oBAAUF,MAAME,QAAhB,CAAjB;AACD;;AAED,YAAI,gBAAMF,MAAMG,UAAZ,CAAJ,EAA6B;AAC3BH,gBAAMG,UAAN,GAAmB,oBAAUH,MAAMG,UAAhB,CAAnB;AACD;AACF;;AAED,aAAOH,KAAP;AACD,KAlBH,CAF6B,CAAzB,EAsBHL,IAtBG,CALD;AA4BLS,aAAS,wBAAO,mBAAP,EAA4B,kBACnCT,KAAKE,GAAL,CAAS,cAAT,CADmC,EAEnC;AAAA,aAAMH,UAAUI,IAAV,CAAeM,OAAf,EAAN;AAAA,KAFmC,CAA5B,EAGNT,IAHM;AA5BJ,GAAP;AAiCD,C;;AAtCD;;AACA;;AACA","file":"repo.js","sourcesContent":["import { expose } from 'postmsg-rpc'\r\nimport { pre, post } from 'prepost'\r\nimport { isBig, bigToJson } from '../serialization/big'\r\n\r\nexport default function (getIpfs, opts) {\r\n  return {\r\n    gc: expose('ipfs.repo.gc', pre(\r\n      opts.pre('repo.gc'),\r\n      (...args) => getIpfs().repo.gc(...args)\r\n    ), opts),\r\n    stat: expose('ipfs.repo.stat', pre(\r\n      opts.pre('repo.stat'),\r\n      post(\r\n        (...args) => getIpfs().repo.stat(...args),\r\n        (stats) => {\r\n          if (stats) {\r\n            if (isBig(stats.numObjects)) {\r\n              stats.numObjects = bigToJson(stats.numObjects)\r\n            }\r\n\r\n            if (isBig(stats.repoSize)) {\r\n              stats.repoSize = bigToJson(stats.repoSize)\r\n            }\r\n\r\n            if (isBig(stats.storageMax)) {\r\n              stats.storageMax = bigToJson(stats.storageMax)\r\n            }\r\n          }\r\n\r\n          return stats\r\n        }\r\n      )\r\n    ), opts),\r\n    version: expose('ipfs.repo.version', pre(\r\n      opts.pre('repo.version'),\r\n      () => getIpfs().repo.version()\r\n    ), opts)\r\n  }\r\n}\r\n"]}